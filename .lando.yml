name: va-gov-cms
recipe: drupal8
config:
  webroot: docroot
  php: "7.2"

events:
  # Clear caches after a database import
  post-db-import:
    - appserver: cd $LANDO_WEBROOT && drush cr -y

  # Mirrors what is in lando-entrypoint-app.sh, keep in sync with that file.
  # @todo don't use absolute path, somehow lando is not detecting drush in path right now. Fix this.
  post-sync-db:
    - appserver: cd $LANDO_WEBROOT && /app/docroot/vendor/bin/drush cache-rebuild -y
    - appserver: cd $LANDO_WEBROOT && /app/docroot/vendor/bin/drush updatedb -y
    - appserver: cd $LANDO_WEBROOT && /app/docroot/vendor/bin/drush config:import -y
    - appserver: cd $LANDO_WEBROOT && /app/docroot/vendor/bin/drush cache-rebuild -y

  # Runs composer install after app starts
  post-start:
    - appserver: cd $LANDO_MOUNT && composer install
#    - appserver: cd $LANDO_MOUNT && npm install

  # After code changes
  post-update:
    - appserver: cd $LANDO_MOUNT && composer install
    - appserver: cd $LANDO_WEBROOT && drush updb -y &&  drush cr -y

services:
  appserver:
    run_as_root:
      - "apt-get update -y"
      - "apt-get install build-essential chrpath libssl-dev libxft-dev libfreetype6-dev libfreetype6 libfontconfig1-dev libfontconfig1 -y"
#      - "tar xvjf /app/phantomjs-2.1.1-linux-x86_64.tar.bz2 -C /usr/local/share/"
#      - "mv /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/"
#      - "cd /usr/bin"
#      - "chmod +x phantomjs"
    # Uncomment the below `xdebug: true` for Xdebug support
    # @todo Change this to pull in a local Lando settings variable and use that boolean variable
    # Run `lando rebuild` after uncommenting
    #xdebug: true
    overrides:
      environment:
        # You must manually `export` these ENV vars before uncommenting, then run `lando rebuild`
        # @see /README.md Build Trigger section
#        VA_CMS_BOT_GITHUB_AUTH_TOKEN: ${VA_CMS_BOT_GITHUB_AUTH_TOKEN}
#        ENVIRONMENT_TYPE: ${ENVIRONMENT_TYPE}
#        JENKINS_BUILD_ENV: ${JENKINS_BUILD_ENV}
        # Support debugging Drush with XDEBUG. Listen in PHPStorm then `lando drush` to trigger xdebug.
        PHP_IDE_CONFIG: "serverName=appserver"
  node:
    type: node
    build:
      - npm install
#      - "cd $LANDO_MOUNT/docroot/themes/custom/vagov && npm install"
    overrides:
      environment:
        BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "http://localhost/"}, "Drupal\\DrupalExtension" : {"drush" : { "root": "/app/docroot" }}}}'
      ports:
        - 3002:3002
        - 3003:3003
      image: node:10.13-jessie
    globals:
      gulp-cli: "latest"
  # Uncomment this to work on site build triggers, then export ENV vars below, then `lando rebuild`.
  # Must use lando 3.0.0-rc9+
  # @see /README.md Build Trigger section
#  va-socks-proxy:
#    type: compose
#    services:
#      image: va/socks-proxy
#      build:
#        context: ./docker/images/va-socks-proxy
#        dockerfile: Dockerfile
#      restart: on-failure
#      # Only way to run a custom entrypoint in Lando
#      # @see https://docs.devwithlando.io/tutorials/compose.html#configuration
#      command: /entrypoint.sh
#      environment:
#        # Must export these first, @see /README.md.
#        VA_SOCKS_PROXY_PRIVATE_KEY: ${VA_SOCKS_PROXY_PRIVATE_KEY}
#        VA_SOCKS_PROXY_SSH_CONFIG: ${VA_SOCKS_PROXY_SSH_CONFIG}
tooling:
  drush:
    cmd: /app/docroot/vendor/bin/drush
  phantomjs:
    service: appserver
    description: "Run phantomjs commands"
  phpunit:
    service: appserver
    description: "Run PHP Unit tests: lando phpunit. Syntax: lando phpunit {PATH-TO-TEST}"
    cmd: /app/docroot/vendor/bin/phpunit --bootstrap=/app/docroot/vendor/weitzman/drupal-test-traits/src/bootstrap.php -c /app
  behat:
    service: appserver
    description: "Run behat tests locally. Run from /tests dir."
    cmd:
      - /app/docroot/vendor/bin/behat
  npm:
    service: node
  node:
    service: node
  nightwatch:
    service: node
    description: "Run nightwatch tests locally. Syntax: npm run-script nightwatch."
    cmd:
      - ./node_modules/.bin/nightwatch --tags accessibility
  gulp:
    service: node
  sync-db:
    service: appserver
    description: Import a manually downloaded, santized PROD DB and run cache-clear, updatedb, config:import & cache-clear. You must manually download DB to .dumps/db-latest.sql.gz.
    cmd: >
      bash -c
      '
      echo "Download the latest sanitized PROD DB into .dumps/db-latest.sql.gz." &&
      read -n1 -r -p "Press any key after you placed .dumps/db-latest.sql.gz..." &&
      gunzip /app/.dumps/db-latest.sql.gz 2> /dev/null || true &&
      /app/docroot/vendor/bin/drush sql-drop --yes &&
      `/app/docroot/vendor/bin/drush sql-connect` < /app/.dumps/db-latest.sql &&
      echo "PROD database import to LOCAL complete. Running post database import Drush commands: cache-clear, updatedb, config-import, cache-clear"
      '
  sync-files:
    service: appserver
    description: Import files from PROD. You must manually download files to /app/.dumps/cmsapp_files.tgz.
    cmd: >
      bash -c
      '
      echo "Download the latest files dump from PROD into /app/.dumps/cmsapp_files.tgz" &&
      read -n1 -r -p "Press any key after you placed /app/.dumps/cmsapp_files.tgz..." &&
      rm -fR /app/docroot/sites/default/files/* &&
      tar -xzvf ./.dumps/cmsapp_files.tgz --directory /app/docroot/sites/default/files &&
      echo "PROD file sync to LOCAL complete."
      '
