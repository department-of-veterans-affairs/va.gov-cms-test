// This file is sourced from ansible/deployment/config/jenkins-vetsgov/seed_job.groovy
// and is used in the http://jenkins.vfs.va.gov/job/testing/job/cms job that
// auto-triggers deploys to DEV & STAGING on commit and which is triggered
// by a webhook.

def shouldBail() {
  // abort the job if there's a newer build going now
  return currentBuild.nextBuild
}

pipeline {
  agent any

  parameters {
      booleanParam(name: 'SKIP_BUILD', defaultValue: false, description: 'Set to true to skip the stage')
      booleanParam(name: 'SKIP_DEPLOY', defaultValue: false, description: 'Set to true to skip the stage')
  }

  stages {
    stage('Checkout Code') {
      steps {
        checkout scm
      }
    }

    stage('Build new AMI') {

      when {
        allOf {
          expression { return !params.SKIP_BUILD }
          expression { return !shouldBail() }
        }
      }

      steps {
        script {
          commit = sh(returnStdout: true, script: "git rev-parse HEAD").trim()
        }

        retry(3){
          build job: "builds/${params.app}", parameters: [
            booleanParam(name: 'release', value: false),
            booleanParam(name: 'notify_slack', value: true),
            stringParam(name: 'slack_channel', value: "${params.slack_channel}"),
            stringParam(name: 'ref', value: commit),
            booleanParam(name: 'force_rebuild', value: true)
          ], wait: true
        }
      }
    }

    stage('Deploy to STAGING') {
      when {
        allOf {
          expression { return !params.SKIP_DEPLOY }
          expression { return !shouldBail() }
        }
      }

      steps {
        build job: "deploys/${params.app}-vagov-staging", parameters: [
          stringParam(name: 'app', value: params.app),
          booleanParam(name: 'notify_slack', value: true),
          stringParam(name: 'ref', value: commit),
          booleanParam(name: 'migration_status', value: false)
        ] , wait: false
      }
    }
  }
  post {
    // Intentionally do not cleanWs() here so that we can use previous commit to ignore certain polling paths.

    failure {
      slackSend(channel: params.slack_channel, color: 'danger', message: "Deployment for ${env.JOB_NAME} failed ${env.BUILD_URL}, please leave a checkmark emoji here to indicate ownership of failure. ")
    }
  }
}
