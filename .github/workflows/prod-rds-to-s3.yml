name: Prod RDS to S3 Backup

on:
  push:
    branches:
      - main # Or whatever branch triggers this task
  workflow_dispatch: # Allows manual triggering with inputs

env:
  # Define environment variables directly in the workflow
  # May put this in SSM but for now
  REGION: "us-gov-west-1" # Define the region for AWS operations
  ROLE: "arn:aws-us-gov:iam::008577686731:role/gha-cms-oidc-role" # Testing with your actual role ARN


permissions:
  id-token: write
  contents: write
  
jobs:
  run-ansible-shell:
    runs-on: ubuntu-latest # Or your desired runner OS

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Use the latest version of the checkout action

    
    - name: Install MySQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client

    - name: Install awscli
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -o awscliv2.zip
        ./aws/install

    - name: Configure AWS Credentials (1)
      uses: aws-actions/configure-aws-credentials@4fc4975a852c8cd99761e2de1f4ba73402e44dd9 # v4.0.3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-gov-west-1


    - name: Configure AWS credentials (1)
      uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
      with:
        aws-region: us-gov-west-1
        role-to-assume: ${{ env.ROLE }}
        role-duration-seconds: 900
        role-session-name: vsp-vagov-cms-githubaction
        output-credentials: true


    - name: Set Drupal DB master password
      uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb # latest
      with:
        ssm_parameter: /cms/prod/mariadb/drupal_password
        env_variable_name: MARIADB_MASTER_PASSWORD
    
    - name: Set Drupal DB hostname
      uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb # latest
      with:
        ssm_parameter: /cms/prod/db_host
        env_variable_name: DATABASE_HOST
    
    - name: Set S3 Backup Private Bucket
      uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb # latest
      with:
        ssm_parameter: /cms/prod/s3_bucket_priv
        env_variable_name: S3_PRIVATE_BUCKET
    
    - name: Set S3 Backup Path
      uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb # latest
      with:
        ssm_parameter: /cms/prod/s3_backup_path
        env_variable_name: S3_BACKUP_PATH

    - name: Copy DB from RDS and Store in S3
      run: |
        # Exit immediately if a command fails with a non-zero status code
        set -e

        tempdir=$(mktemp -d)
        cd $tempdir

        # UTF8MB4 is so that emoji make it downstream!
        mysqldump --default-character-set=utf8mb4 --single-transaction -h ${{ env.DATABASE_HOST }} -u master -p${{ env.MARIADB_MASTER_PASSWORD }} dsva_cms_prod > drupal8-db-prod-$(date "+%Y-%m-%d-%H-%M").sql

        gzip drupal8-db-prod-*.sql

        aws s3 cp drupal8-db-prod-*.sql.gz s3://${{ env.S3_PRIVATE_BUCKET }}/${{ env.S3_BACKUP_PATH }}/ --region ${{ env.REGION }}

        aws s3api put-object-tagging --bucket ${{ env.S3_PRIVATE_BUCKET }} --key ${{ env.S3_BACKUP_PATH }}/LV-test-drupal8-db-prod-*.sql.gz --region ${{ env.REGION }} --tagging 'TagSet=[{Key=Env,Value=prod}]'

        cd
        rm -rf ${tempdir}